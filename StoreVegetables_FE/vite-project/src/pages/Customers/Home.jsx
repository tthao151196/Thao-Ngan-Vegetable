import { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import ProductCard from "../../components/ProductCard";

const API_BASE = "http://127.0.0.1:8000";
const PLACEHOLDER = "https://placehold.co/300x200?text=No+Image";

export default function Home() {
  const [categories, setCategories] = useState([]);
  const [newItems, setNewItems] = useState([]);
  const [saleItems, setSaleItems] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const navigate = useNavigate();

  useEffect(() => {
    const ac = new AbortController();

    (async () => {
      try {
        setLoading(true);
        setError("");

        // ‚úÖ L·∫•y danh m·ª•c
        const resCats = await fetch(`${API_BASE}/categories`, { signal: ac.signal });
        if (!resCats.ok) throw new Error(`HTTP ${resCats.status}`);
        const cats = await resCats.json();
        setCategories(Array.isArray(cats) ? cats : cats?.data ?? []);

        // ‚úÖ L·∫•y s·∫£n ph·∫©m
        const resProds = await fetch(`${API_BASE}/products`, { signal: ac.signal });
        if (!resProds.ok) throw new Error(`HTTP ${resProds.status}`);
        const prods = await resProds.json();

        // Demo: c·∫Øt 4 s·∫£n ph·∫©m ƒë·∫ßu l√† "m·ªõi", 4 cu·ªëi l√† "gi·∫£m gi√°"
        const list = Array.isArray(prods) ? prods : prods?.data ?? [];
        setNewItems(list.slice(0, 4));
        setSaleItems(list.slice(-4));
      } catch (err) {
        if (err.name !== "AbortError") setError("Kh√¥ng t·∫£i ƒë∆∞·ª£c d·ªØ li·ªáu");
      } finally {
        setLoading(false);
      }
    })();

    return () => ac.abort();
  }, []);

  return (
    <div
      style={{
        fontFamily: "Montserrat, Arial, sans-serif",
        background: "#f1f8e9",
        minHeight: "100vh",
      }}
    >
      {/* Hero */}
      <section
        style={{
          padding: "48px 0 32px",
          textAlign: "center",
          background: "linear-gradient(90deg, #e8f5e9 60%, #fffde7 100%)",
        }}
      >
        <h1
          style={{
            fontSize: 38,
            fontWeight: 700,
            color: "#388e3c",
            marginBottom: 10,
          }}
        >
          StoreVegetables ü•ïü•¶
        </h1>
        <p style={{ fontSize: 18, color: "#4caf50" }}>
          N∆°i cung c·∫•p rau c·ªß qu·∫£ t∆∞∆°i s·∫°ch t·ª´ n√¥ng tr·∫°i ƒë·∫øn b√†n ƒÉn
        </p>

        {/* === N√öT ƒêƒÇNG K√ù (TH√äM M·ªöI) ===
        <div style={{ marginTop: 16, textAlign: "center" }}>
          <button
            type="button"
            onClick={() => navigate("/register")}
            style={{
              background: "#388e3c",
              color: "#fff",
              border: "none",
              padding: "10px 16px",
              borderRadius: 10,
              cursor: "pointer",
              fontWeight: 600,
              boxShadow: "0 2px 8px rgba(56,142,60,0.25)",
            }}
            onMouseEnter={(e) => (e.currentTarget.style.opacity = "0.9")}
            onMouseLeave={(e) => (e.currentTarget.style.opacity = "1")}
          >
            ƒêƒÉng k√Ω
          </button>
        </div> */}
      </section>

      {/* Danh m·ª•c n·ªïi b·∫≠t */}
      <section style={{ margin: "40px 0" }}>
        <h2
          style={{ fontSize: 24, fontWeight: 600, marginBottom: 18, color: "#388e3c" }}
        >
          Danh m·ª•c n·ªïi b·∫≠t
        </h2>

        {categories.length === 0 ? (
          <p style={{ textAlign: "center", color: "#666" }}>Ch∆∞a c√≥ danh m·ª•c.</p>
        ) : (
          <div
            style={{
              display: "flex",
              gap: 24,
              justifyContent: "center",
              flexWrap: "wrap",
            }}
          >
            {categories.map((c) => (
              <button
                key={c.id}
                type="button"
                onClick={() => navigate(`/category/${c.id}`)} // ‚úÖ sang CategoryProducts
                style={{
                  background: "#fff",
                  borderRadius: 12,
                  boxShadow: "0 2px 8px #e0f2f1",
                  padding: "16px",
                  minWidth: 160,
                  textAlign: "center",
                  fontWeight: 600,
                  fontSize: 16,
                  color: "#388e3c",
                  border: "1px solid #e0f2f1",
                  cursor: "pointer",
                  transition: "transform .12s ease, box-shadow .12s ease",
                }}
                onMouseEnter={(e) =>
                  (e.currentTarget.style.transform = "translateY(-2px)")
                }
                onMouseLeave={(e) =>
                  (e.currentTarget.style.transform = "translateY(0)")
                }
              >
                <div
                  style={{
                    height: 100,
                    marginBottom: 8,
                    overflow: "hidden",
                    borderRadius: 8,
                    background: "#f1f8e9",
                  }}
                >
                  <img
                    src={c.image_url || PLACEHOLDER}
                    alt={c.name}
                    style={{
                      width: "100%",
                      height: "100%",
                      objectFit: "cover",
                    }}
                    onError={(e) => (e.currentTarget.src = PLACEHOLDER)}
                  />
                </div>
                {c.name}
              </button>
            ))}
          </div>
        )}
      </section>

      {/* Tr·∫°ng th√°i */}
      {loading && (
        <p style={{ textAlign: "center", color: "#388e3c" }}>ƒêang t·∫£i d·ªØ li·ªáu...</p>
      )}
      {error && <p style={{ textAlign: "center", color: "#d32f2f" }}>{error}</p>}

      {/* S·∫£n ph·∫©m */}
      {!loading && !error && (
        <>
          <section style={{ margin: "40px 0" }}>
            <h2
              style={{ fontSize: 24, fontWeight: 600, marginBottom: 18, color: "#388e3c" }}
            >
              S·∫£n ph·∫©m m·ªõi
            </h2>
            <div
              style={{
                display: "flex",
                gap: 24,
                flexWrap: "wrap",
                justifyContent: "center",
              }}
            >
                {newItems.map((p) => (
                  <ProductCard
                    key={p.id}
                    p={{ ...p, image: p.image_url || PLACEHOLDER }}
                  />
                ))}
            </div>
          </section>

          <section style={{ margin: "40px 0" }}>
            <h2
              style={{ fontSize: 24, fontWeight: 600, marginBottom: 18, color: "#ff7043" }}
            >
              ƒêang gi·∫£m gi√°
            </h2>
            <div
              style={{
                display: "flex",
                gap: 24,
                flexWrap: "wrap",
                justifyContent: "center",
              }}
            >
                {saleItems.map((p) => (
                  <ProductCard
                    key={p.id}
                    p={{ ...p, image: p.image_url || PLACEHOLDER }}
                  />
                ))}
            </div>
          </section>
        </>
      )}

      {/* About */}
      <section
        style={{
          background: "#fff",
          borderRadius: 16,
          boxShadow: "0 2px 8px #e0f2f1",
          padding: "32px 24px",
          margin: "40px auto 24px",
          maxWidth: 700,
          textAlign: "center",
        }}
      >
        <h2
          style={{ fontSize: 22, fontWeight: 600, marginBottom: 10, color: "#388e3c" }}
        >
          V·ªÅ ch√∫ng t√¥i
        </h2>
        <p style={{ color: "#4caf50", fontSize: 16 }}>
          StoreVegetables cam k·∫øt mang ƒë·∫øn nh·ªØng s·∫£n ph·∫©m n√¥ng s·∫£n t∆∞∆°i s·∫°ch, an to√†n v√† gi√†u dinh d∆∞·ª°ng.
          Ch√∫ng t√¥i k·∫øt n·ªëi n√¥ng d√¢n v√† ng∆∞·ªùi ti√™u d√πng, v√¨ m·ªôt cu·ªôc s·ªëng xanh, kh·ªèe m·∫°nh v√† b·ªÅn v·ªØng.
        </p>
      </section>
    </div>
  );
}
